name: CI/CD to Kubernetes

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      packages: write
    outputs:
      image: ${{ steps.meta.outputs.tags }}
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run typecheck

      - name: Run linter
        run: npm run lint

      - name: Run build (test)
        run: npm run build

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: self-hosted  # Máy chủ Linux có Kubernetes
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create namespace
        run: |
          kubectl apply -f k8s/namespace.yaml

      - name: Apply ConfigMap and PVC
        run: |
          kubectl apply -f k8s/persistentvolume.yaml

      - name: Apply Service
        run: |
          kubectl apply -f k8s/service.yaml

      - name: Update deployment image
        env:
          IMAGE: ${{ needs.build.outputs.image }}
        run: |
          # Thay thế placeholder trong deployment.yaml với image thực tế
          sed -i "s|ghcr.io/hieupcadsc/thuchi:latest|$IMAGE|g" k8s/deployment.yaml
          kubectl apply -f k8s/deployment.yaml

      - name: Wait for rollout
        run: |
          kubectl -n thuchi-app rollout status deployment/thuchi-app --timeout=300s

      - name: Verify deployment
        run: |
          kubectl -n thuchi-app get pods,svc -o wide
          kubectl -n thuchi-app describe deployment thuchi-app

      - name: Get application URL
        run: |
          NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
          NODE_PORT=$(kubectl -n thuchi-app get svc thuchi-app-service -o jsonpath='{.spec.ports[0].nodePort}')
          echo "Application is available at: http://$NODE_IP:$NODE_PORT"
